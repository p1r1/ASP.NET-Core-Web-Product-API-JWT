services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ProductAppDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Auth API Service
  auth-api:
    build:
      context: .
      dockerfile: Auth.API/Dockerfile
    ports:
      - "7001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=ProductAppDB;Username=postgres;Password=postgres;
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Product API Service
  product-api:
    build:
      context: .
      dockerfile: Product.API/Dockerfile
    ports:
      - "7002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=ProductAppDB;Username=postgres;Password=postgres;
      - ConnectionStrings__Redis=redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-api:
        condition: service_started
    restart: unless-stopped

  # EF Tooling Container (for migrations)
  # ef-tools:
  #   image: mcr.microsoft.com/dotnet/sdk:9.0
  #   working_dir: /src
  #   volumes:
  #     - .:/src
  #   entrypoint: ["dotnet"]
  #   command: ["tool", "install", "--global", "dotnet-ef", "--version", "9.0.8"]
  ef-tools:
    build:
        context: .
        dockerfile: EfTools.Dockerfile
    volumes:
      - .:/src
    working_dir: /src

volumes:
  postgres_data:
  redis_data: